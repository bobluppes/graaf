"use strict";(self.webpackChunkgraaf=self.webpackChunkgraaf||[]).push([[653],{2790:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>o,contentTitle:()=>c,default:()=>g,frontMatter:()=>i,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"quickstart/basics/creating-your-first-graph","title":"Creating Your First Graph","description":"1. In your main.cpp import Graaf:","source":"@site/docs/quickstart/basics/creating-your-first-graph.md","sourceDirName":"quickstart/basics","slug":"/quickstart/basics/creating-your-first-graph","permalink":"/graaf/docs/quickstart/basics/creating-your-first-graph","draft":false,"unlisted":false,"editUrl":"https://github.com/bobluppes/graaf/tree/main/docs/quickstart/basics/creating-your-first-graph.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"quickstartSidebar","previous":{"title":"Graaf Architecture","permalink":"/graaf/docs/quickstart/basics/architecture"},"next":{"title":"Using Algorithms","permalink":"/graaf/docs/quickstart/basics/using-algorithms"}}');var n=t(4848),s=t(8453);const i={sidebar_position:2},c="Creating Your First Graph",o={},d=[{value:"Congratulations! You just created the following graph \ud83c\udf89",id:"congratulations-you-just-created-the-following-graph-",level:3}];function l(e){const r={code:"code",h1:"h1",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"creating-your-first-graph",children:"Creating Your First Graph"})}),"\n",(0,n.jsxs)(r.ol,{children:["\n",(0,n.jsxs)(r.li,{children:["In your ",(0,n.jsx)(r.code,{children:"main.cpp"})," import Graaf:"]}),"\n"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-c++",children:"#include <graaflib/graph.h>\n"})}),"\n",(0,n.jsxs)(r.ol,{start:"2",children:["\n",(0,n.jsxs)(r.li,{children:["Define a directed graph ",(0,n.jsx)(r.code,{children:"g"})]}),"\n"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-c++",children:"graaf::directed_graph<const char, int> g;\n"})}),"\n",(0,n.jsxs)(r.ol,{start:"3",children:["\n",(0,n.jsx)(r.li,{children:"Add vertices to the graph:"}),"\n"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-c++",children:"const auto a = g.add_vertex('a');\nconst auto b = g.add_vertex('b');\nconst auto c = g.add_vertex('c');\n"})}),"\n",(0,n.jsxs)(r.ol,{start:"4",children:["\n",(0,n.jsx)(r.li,{children:"Connect the vertices with edges:"}),"\n"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-c++",children:"g.add_edge(a, b, 1);\ng.add_edge(a, c, 1);\n"})}),"\n",(0,n.jsxs)(r.ol,{start:"5",children:["\n",(0,n.jsx)(r.li,{children:"Putting it all together:"}),"\n"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-c++",children:"#include <graaflib/graph.h>\n\nint main()\n{\n    graaf::directed_graph<const char, int> g;\n\n    const auto a = g.add_vertex('a');\n    const auto b = g.add_vertex('b');\n    const auto c = g.add_vertex('c');\n\n    g.add_edge(a, b, 1);\n    g.add_edge(a, c, 1);\n\n    return 0;\n}\n"})}),"\n",(0,n.jsx)(r.h3,{id:"congratulations-you-just-created-the-following-graph-",children:"Congratulations! You just created the following graph \ud83c\udf89"}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.img,{alt:"Directed graph example",src:t(8917).A+"",width:"1150",height:"757"})})]})}function g(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8917:(e,r,t)=>{t.d(r,{A:()=>a});const a=t.p+"assets/images/Graph-277f3510ae4cef53e2f6b95aa1549cae.png"},8453:(e,r,t)=>{t.d(r,{R:()=>i,x:()=>c});var a=t(6540);const n={},s=a.createContext(n);function i(e){const r=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),a.createElement(s.Provider,{value:r},e.children)}}}]);