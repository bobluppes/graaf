"use strict";(self.webpackChunkgraaf=self.webpackChunkgraaf||[]).push([[908],{5444:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"algorithms/strongly-connected-components/kosarajus","title":"Kosaraju\'s Strongly Connected Components","description":"Kosaraju\'s algorithm computes the Strongly Connected Components (SCCs) of a directed graph. An SCC is a subset of vertices","source":"@site/docs/algorithms/strongly-connected-components/kosarajus.md","sourceDirName":"algorithms/strongly-connected-components","slug":"/algorithms/strongly-connected-components/kosarajus","permalink":"/graaf/docs/algorithms/strongly-connected-components/kosarajus","draft":false,"unlisted":false,"editUrl":"https://github.com/bobluppes/graaf/tree/main/docs/algorithms/strongly-connected-components/kosarajus.md","tags":[],"version":"current","frontMatter":{},"sidebar":"algorithmSidebar","previous":{"title":"Strongly Connected Component Algorithms","permalink":"/graaf/docs/category/strongly-connected-component-algorithms"},"next":{"title":"Tarjan\'s Strongly Connected Components","permalink":"/graaf/docs/algorithms/strongly-connected-components/tarjan"}}');var s=t(4848),r=t(8453);const a={},c="Kosaraju's Strongly Connected Components",i={},l=[{value:"Syntax",id:"syntax",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"kosarajus-strongly-connected-components",children:"Kosaraju's Strongly Connected Components"})}),"\n",(0,s.jsx)(n.p,{children:"Kosaraju's algorithm computes the Strongly Connected Components (SCCs) of a directed graph. An SCC is a subset of vertices\nin the graph for which every vertex is reachable from every other vertex in the subset, i.e. there exists a path between\nall pairs of vertices for the subset of vertices."}),"\n",(0,s.jsxs)(n.p,{children:["Kosaraju's algorithm runs in ",(0,s.jsx)(n.code,{children:"O(|V| + |E|)"})," for directed graphs, where ",(0,s.jsx)(n.code,{children:"|V|"})," the number of vertices and ",(0,s.jsx)(n.code,{children:"|E|"})," is the\nnumber of edges in the graph. So it runs in linear time."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Kosaraju%27s_algorithm",children:"wikipedia"})}),"\n",(0,s.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:"template <typename V, typename E>\nsccs_t kosarajus_strongly_connected_components(const directed_graph<V, E>& graph);\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"graph"})," The graph for which to compute SCCs."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"return"})," A type consisting of a vector of vectors representing SCCs."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var o=t(6540);const s={},r=o.createContext(s);function a(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);