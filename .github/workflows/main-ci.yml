name: Main-CI

on:
  push:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  coverage:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: sudo apt-get install lcov -y

    - name: Pull CMake modules
      uses: actions/checkout@v4
      with:
        repository: bilke/cmake-modules
        ref: 877bab9dd1b17468c5d939cacaa2ad7ba99d1977
        path: cmake-modules

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DENABLE_COVERAGE=True

    - name: Generate coverage XML
      working-directory: ${{github.workspace}}/build
      run: make ctest_coverage

    - name: Upload coverage report
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./build/ctest_coverage.info
        verbose: true # optional (default = false)

  format:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: clang-format
        uses: jidicula/clang-format-action@v4.11.0
        with:
          clang-format-version: '15'
